/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import Clases.*;
import ENUMS.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josue
 */
public class Editar extends javax.swing.JFrame {
    String codigo;
    /**
     * Creates new form Agregar
     */
    public Editar() {
        initComponents();
        
        actualizarTablas();
    }
    
    private void actualizarTablas(){
        DefaultTableModel modeloTabla = new DefaultTableModel();
        
        ArrayList<Object> columnasModel = new ArrayList<Object>();
        
        columnasModel.add("Nombre");
        columnasModel.add("CÃ³digo Activo");
        
        for(Object columna : columnasModel){
            modeloTabla.addColumn(columna);
        }
        
        
        
        List<Activo> activosGuardados = GuardadoDatos.getActivos();
        
        ArrayList<List<String>> activosParaMostrar = new ArrayList<List<String>>(); 
        
        /*String nombreActivo, TipoDeActivo tipoActivo, Tag tagActivo, ValoracionCorta disponibilidad, ValoracionCorta integridad, ValoracionLarga confidencialidad*/
        
        for(Activo activo : activosGuardados){
            List<String> nuevo = new ArrayList<String>();
            nuevo.add(activo.getNombreActivo());
            nuevo.add(activo.getCodigoActivo());
            
            activosParaMostrar.add(nuevo);
        }
        
        for(List<String> lista : activosParaMostrar){
            Object[] ingreso = lista.toArray();
            
           modeloTabla.addRow(ingreso);
        }
        
        
        this.tablaExistentes.setModel(modeloTabla);
        tablaExistentes.setAutoCreateRowSorter(true);
        
        
        
        //Setear los comboBox 
        
        //Tipo de activo
        this.comboTipo.setModel(new DefaultComboBoxModel(TipoDeActivo.values()));
        
        //TagType de activo
        this.comboTagType.setModel(new DefaultComboBoxModel(TagsType.values()));
        
        //Setear los tags disponibles en base al tagType seleccionado
        String tType = comboTagType.getSelectedItem().toString();
        
        setTagsType(tType);
        
        //Disponibilidad
        this.comboDisponibilidad.setModel(new DefaultComboBoxModel(ValoracionLarga.values()));
        
        //Integridad
        this.comboIntegridad.setModel(new DefaultComboBoxModel(ValoracionIntegtridad.values()));
        
        //Confidencialidad
        this.comboConfidencialidad.setModel(new DefaultComboBoxModel(ValoracionCorta.values()));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnRegresar = new javax.swing.JButton();
        labelTitulo = new javax.swing.JLabel();
        labelText = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        labelDisponibilidad = new javax.swing.JLabel();
        comboDisponibilidad = new javax.swing.JComboBox<>();
        labelTag = new javax.swing.JLabel();
        comboTagType = new javax.swing.JComboBox<>();
        labelIntegridad = new javax.swing.JLabel();
        comboIntegridad = new javax.swing.JComboBox<>();
        labelConfidencialidad = new javax.swing.JLabel();
        comboConfidencialidad = new javax.swing.JComboBox<>();
        labelTag1 = new javax.swing.JLabel();
        comboTipo = new javax.swing.JComboBox<>();
        comboTag = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        labelTitulo1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaExistentes = new javax.swing.JTable();
        btnSeleccionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 255));
        setPreferredSize(new java.awt.Dimension(921, 565));
        setResizable(false);
        setSize(new java.awt.Dimension(921, 565));

        jPanel1.setBackground(new java.awt.Color(189, 221, 211));
        jPanel1.setForeground(new java.awt.Color(189, 221, 211));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/atras.png"))); // NOI18N
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 46, -1));

        labelTitulo.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelTitulo.setText("Existentes");
        jPanel1.add(labelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, -1, 24));

        labelText.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelText.setText("Nombre:");
        jPanel1.add(labelText, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, -1, -1));
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 250, -1));

        labelDisponibilidad.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelDisponibilidad.setText("Disponibilidad:");
        jPanel1.add(labelDisponibilidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, -1, -1));

        comboDisponibilidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDisponibilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDisponibilidadActionPerformed(evt);
            }
        });
        jPanel1.add(comboDisponibilidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, 246, -1));

        labelTag.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelTag.setText("Tag:");
        jPanel1.add(labelTag, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, -1, -1));

        comboTagType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTagTypeItemStateChanged(evt);
            }
        });
        jPanel1.add(comboTagType, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 246, -1));

        labelIntegridad.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelIntegridad.setText("Integridad:");
        jPanel1.add(labelIntegridad, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, -1, -1));

        comboIntegridad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(comboIntegridad, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 246, -1));

        labelConfidencialidad.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelConfidencialidad.setText("Confidencialidad:");
        jPanel1.add(labelConfidencialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, -1, -1));

        comboConfidencialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(comboConfidencialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 246, -1));

        labelTag1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelTag1.setText("Tipo:");
        jPanel1.add(labelTag1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, -1, -1));

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(comboTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 246, -1));

        jPanel1.add(comboTag, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 246, -1));

        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, 100, 40));

        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 480, 100, 40));

        labelTitulo1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelTitulo1.setText("Editar Activo");
        jPanel1.add(labelTitulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, 24));

        tablaExistentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tablaExistentes.setMinimumSize(new java.awt.Dimension(921, 565));
        tablaExistentes.setPreferredSize(new java.awt.Dimension(921, 565));
        jScrollPane1.setViewportView(tablaExistentes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, 300, 350));

        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });
        jPanel1.add(btnSeleccionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 440, 100, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboTagTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTagTypeItemStateChanged
        //Cambia automÃ¡ticamente
        
        if(comboTagType.getSelectedItem() != null){
            String tType = comboTagType.getSelectedItem().toString();
            setTagsType(tType);
        }
    }//GEN-LAST:event_comboTagTypeItemStateChanged

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if(!txtNombre.getText().isEmpty()){
            //nombreActivo
            String nombre = this.txtNombre.getText();

            //TipoDeactivo
            TipoDeActivo tipoAct = (TipoDeActivo)this.comboTipo.getSelectedItem();

            String selectedTag = comboTag.getSelectedItem().toString();

            Tag tagActivo = new Tag();

            //TagActivo
            System.out.println("ComboTagType: "+comboTagType.getSelectedItem().toString());
            System.out.println("SelectedTag: selectedTag");
            tagActivo.setTag(comboTagType.getSelectedItem().toString(), selectedTag);

            ValoracionLarga disponibilidad = (ValoracionLarga) comboDisponibilidad.getSelectedItem();

            //Integridad
            ValoracionIntegtridad integridad = (ValoracionIntegtridad) comboIntegridad.getSelectedItem();

            //Confidencialidad
            ValoracionCorta confidencialidad = (ValoracionCorta) comboConfidencialidad.getSelectedItem();
            
            if(codigo != null){
                
                //Se modifica el nuevo activo
                Activo activo = GuardadoDatos.buscarActivoPorCodigo(codigo);
                //Comprobamos que se haya seleccionado un activo o que no exista
                if(activo != null){
                    //if(activo.modificarActivo(nombre, tipoAct, tagActivo, disponibilidad, integridad, confidencialidad)){
                    if(activo.modificarActivo(nombre, tipoAct, tagActivo, disponibilidad, integridad, confidencialidad)){
                        String mensaje = "Modificado Correctamente: Nombre:"+activo.getNombreActivo()+" CÃ³digo: "+activo.getCodigoActivo();
                        JOptionPane.showMessageDialog(null, mensaje);
                        actualizarTablas();
                    }else{
                        JOptionPane.showMessageDialog(null, "No se modificÃ³ el activo correctamente");
                    }


                    //Cerrar ventana
                    Inicio inicio = new Inicio();

                    inicio.setVisible(true);
                    this.dispose();
                }else{
                    JOptionPane.showMessageDialog(null, "ERROR: El activo seleccionado no se encuentra.");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Debes seleccionar un activo de la lista de existentes.");
            }
            
            
        }else{
            JOptionPane.showMessageDialog(null, "Debes ingresar un nombre de activo.");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Inicio inicio = new Inicio();
        
        inicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        Inicio inicio = new Inicio();
        
        inicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        
        if(this.tablaExistentes.getSelectedRow() > -1){
            DefaultTableModel tm = (DefaultTableModel) tablaExistentes.getModel();
            codigo = (String) tm.getValueAt(tablaExistentes.getSelectedRow(),1);
            
            Activo activo = GuardadoDatos.buscarActivoPorCodigo(codigo);
                
            System.out.println("Activo encontrado: "+ activo.toString());
            
            System.out.println("Codigo seleccionado: "+codigo);
            
            txtNombre.setText(activo.getNombreActivo());
            
            comboTipo.setSelectedItem((Object) activo.getTipoActivo());
            
            
            //Tipo de tag activo
            String typeTag = activo.getTagActivo().returnTypeOfTag();
            comboTagType.setSelectedItem((Object) TagsType.valueOf(typeTag));
            
            //Tag activo
            String tag = activo.getTagActivo().getTag();
            System.out.println("TypeTag: "+typeTag);
            //comboTag.setSelectedItem((Object) tag);
            
            if(typeTag.compareTo("Equipamento_Celular") == 0){
                comboTag.setSelectedItem((Object) TagEquipamentoCelular.valueOf(tag));
            }else if(typeTag.compareTo("Equipos_Informaticos") == 0){
                comboTag.setSelectedItem((Object) TagEquiposInformaticos.valueOf(tag));
            }else if(typeTag.compareTo("Instalaciones") == 0){
                System.out.println("Corroborar: "+TagInstalaciones.valueOf(tag));
                comboTag.setSelectedItem((Object) TagInstalaciones.valueOf(tag));
            }else if(typeTag.compareTo("Personal") == 0){
                comboTag.setSelectedItem((Object) TagPersonal.valueOf(tag));
            }else if(typeTag.compareTo("Redes_De_Comunicaciones") == 0){
                comboTag.setSelectedItem((Object) TagRedesDeComunicaciones.valueOf(tag));
            }else if(typeTag.compareTo("Servicios") == 0){
                comboTag.setSelectedItem((Object) TagServicios.valueOf(tag));
            }else if(typeTag.compareTo("Software") == 0){
                comboTag.setSelectedItem((Object) TagSoftware.valueOf(tag));
            }
            
            
            
            comboDisponibilidad.setSelectedItem((Object) activo.getDisponibilidad());
            
            comboIntegridad.setSelectedItem((Object) activo.getIntegridad());
            
            comboConfidencialidad.setSelectedItem((Object) activo.getConfidencialidad());
        }
        
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void comboDisponibilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDisponibilidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDisponibilidadActionPerformed

    public void setTagsType(String tType){
        if(tType.compareTo("Equipamento_Celular") == 0){
            this.comboTag.setModel(new DefaultComboBoxModel(TagEquipamentoCelular.values()));
        }
        else if(tType.compareTo("Equipos_Informaticos") == 0){
            this.comboTag.setModel(new DefaultComboBoxModel(TagEquiposInformaticos.values()));
        }
        else if(tType.compareTo("Instalaciones") == 0){
            this.comboTag.setModel(new DefaultComboBoxModel(TagInstalaciones.values()));
        }
        else if(tType.compareTo("Personal") == 0){
            this.comboTag.setModel(new DefaultComboBoxModel(TagPersonal.values()));
        }
        else if(tType.compareTo("Redes_De_Comunicaciones") == 0){
            this.comboTag.setModel(new DefaultComboBoxModel(TagRedesDeComunicaciones.values()));
        }
         else if(tType.compareTo("Servicios") == 0){
             this.comboTag.setModel(new DefaultComboBoxModel(TagServicios.values()));
        }
         else if(tType.compareTo("Software") == 0){
             this.comboTag.setModel(new DefaultComboBoxModel(TagSoftware.values()));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JComboBox<String> comboConfidencialidad;
    private javax.swing.JComboBox<String> comboDisponibilidad;
    private javax.swing.JComboBox<String> comboIntegridad;
    private javax.swing.JComboBox<String> comboTag;
    private javax.swing.JComboBox<String> comboTagType;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelConfidencialidad;
    private javax.swing.JLabel labelDisponibilidad;
    private javax.swing.JLabel labelIntegridad;
    private javax.swing.JLabel labelTag;
    private javax.swing.JLabel labelTag1;
    private javax.swing.JLabel labelText;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelTitulo1;
    private javax.swing.JTable tablaExistentes;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
